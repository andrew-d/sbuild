// Code generated by go-bindata.
// sources:
// gnutar-configure-xattrs.patch
// tar-0001-fix-build-failure.patch
// DO NOT EDIT!

package tar

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _gnutarConfigureXattrsPatch = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5b\x7d\x73\xda\x48\x93\xff\xfb\xf4\x29\xe6\x21\xd4\x1a\x02\x92\x25\xde\x0c\xde\x78\xcf\x3c\x58\x76\xb8\x10\xf0\x01\xde\x64\x2b\x49\x29\x42\x1a\x19\x5d\x40\xe2\x24\xe1\x97\xcb\xe6\xbb\x5f\xf7\x8c\x04\x92\x10\xb6\xc8\xe5\xae\xae\x36\xeb\x54\x84\xd4\xea\xee\x99\xf9\xf5\xcb\xf4\x0c\x83\x69\x5b\x16\x11\xc5\x5b\x3b\x20\xfa\xf1\x5b\xfd\x0b\xb5\xec\x05\x95\x6c\x87\xcc\xe2\x4f\x82\xed\x98\xf4\x81\x58\x1d\x4b\x31\x15\x53\x92\x66\x0d\xb9\x4e\x1b\x2d\xa2\xc8\x72\xab\xd1\x10\x44\x51\x4c\x4a\x0b\x95\x4a\x25\xa5\xe1\xfc\x9c\x88\x4a\xb5\x41\x2a\x78\x39\x3f\x17\xc4\x17\x24\xde\xdc\x2d\x75\xa8\xa7\x07\xd4\x24\xb3\x47\xa2\xaf\x03\x77\x09\x2f\x89\x22\x29\x0d\x62\x79\xee\x72\xcb\xab\x2f\x25\xa1\x92\x57\x56\x52\x32\xa4\xc9\x0b\x72\x6e\xb8\x8e\x65\xdf\xae\x3d\xaa\xd9\xce\x6a\x1d\x9c\x0b\x04\xc9\x3d\x77\xf5\xe8\xd9\xb7\xf3\x80\x94\x7a\x65\xa2\x74\x3a\x0d\xb1\x26\x2b\x75\x72\xe9\x51\x4a\x26\xae\x15\xdc\xeb\x1e\x25\x97\xee\xda\x31\xf5\xc0\x76\x9d\x2a\xe9\x3b\x86\xc4\x87\xd6\x6c\xd7\xab\x1d\x18\x1d\x7e\x2a\x32\x8c\x90\x98\xb6\x1f\x18\x73\x6a\x7c\x39\x65\xb7\x02\xf9\x17\x42\x7e\xf9\x85\x98\x86\x66\x52\x3f\x30\x6d\xef\xac\x50\x2c\x7e\x9d\xbe\xbd\xbe\xe8\x8f\xc5\xe3\x60\xb9\xfa\x76\xac\x2f\x45\xd3\x10\x8b\xf0\x77\x5c\x20\x1f\x23\x09\x7d\xa9\x69\xc6\xbd\x79\xf6\x79\x75\x6f\x7e\xde\x92\x8b\x25\xf6\xc2\x2c\xc3\x1d\x36\x00\x1a\xcb\xc7\xda\x6c\x6d\x2f\x4c\x60\x12\x39\x93\x24\x1d\x6f\xc6\x0a\x76\xf6\x3d\x03\x1b\x96\x24\xb8\x5f\x79\x80\xc9\x03\x76\x02\xba\x64\x3b\x7e\xa0\x2f\x16\xda\x4c\xf7\x29\x36\x5d\xc9\x10\xe7\x2d\x13\x68\xae\xfb\x56\xbb\xe8\x4f\xa6\xbd\xd7\x6a\xef\x8d\xd6\x1b\x0d\x2f\xfb\x57\x37\x63\x55\xbb\x1c\x74\xaf\x26\xe5\x18\xdf\x93\x4c\x15\xc6\x74\x40\x9f\x36\xe3\x7e\xdb\x7d\xa3\x96\x79\x37\xf0\x36\xd1\xec\x13\x0c\xe6\x9d\xfd\x3c\x13\xb3\x18\xb0\x25\x02\x43\x37\x16\xae\xa1\x2f\xa4\x65\x03\xbc\x7a\xfb\x10\x86\x85\x4c\xe5\x4e\xb3\xdd\x91\xa4\xb6\xdc\x30\xe4\x59\x3d\x19\x16\x31\x76\x1e\x15\x31\x42\x46\x50\x6c\x9d\x99\x7b\x72\x60\x03\xef\xe2\x91\xb9\x36\x17\xe4\x51\x21\xbe\x14\x49\x17\x38\xd0\x3c\xf8\x80\x41\x91\x53\x16\xa2\x62\x47\x3a\xdb\xff\x5b\xb9\xfc\x9f\xb0\x71\xd4\x9b\xd5\x13\x52\x61\x57\x78\xec\xf6\xb4\x0b\xf5\xf2\x66\x58\xfa\x00\xf0\x76\x6f\xa6\x23\x84\x58\xfb\x5d\x1d\x4f\xfa\xa3\xe1\xa7\xaa\x40\x3e\xa0\xf3\xea\x2b\x5b\xbb\xa3\x9e\x0f\xba\xce\x8e\xb0\x6b\x47\x02\x31\x9d\x05\xb4\xb5\xa4\x64\xed\xc3\x1b\x62\x01\xc6\x24\x43\x07\xd1\x81\xbe\x04\xb7\xc7\x58\x07\x23\x59\xae\x47\x74\x72\xaf\x3f\x92\xc0\xe5\x4a\x3c\xfa\x9f\x6b\x1b\xfa\xeb\xa3\xb2\xa5\xed\xd8\xcb\xf5\x92\x84\xad\x49\x84\x5c\xbb\xb6\x13\x90\x60\x4e\x97\x20\x81\x9f\x84\x0f\x7d\xa9\x1b\x9e\x2b\x09\xe2\xb2\xa1\xd9\x56\xe9\x43\x51\xf9\x54\x25\x1f\xb0\x6f\xf8\x09\x3d\xaf\xec\xbc\x90\x94\xf0\x15\xe1\x7f\x1f\x60\xf0\x97\xdd\x69\x77\x50\xfa\x70\xe1\x12\xc7\x0d\x08\x9a\x81\x14\xe5\x2a\x8e\x09\x07\xd3\x1f\xf6\xa7\x9b\x11\x31\x55\x65\xe9\x53\xf9\x53\x19\xba\x2d\x90\x4f\xe5\x10\xd1\xa6\x82\x88\xb2\x2b\x3c\x42\xb3\x26\x04\x87\x43\x4b\x1f\xb4\x10\x0f\x0c\xaa\x2d\xa6\xd0\x85\x32\xb3\x22\x36\xb6\x0f\xb1\x2c\xba\xcf\x86\xff\x08\xbd\x84\xb4\x4f\x49\xe0\xe9\x06\x35\x59\x9e\x9c\xce\x6d\xb0\xc0\xda\x31\xd0\xda\x04\xee\x61\x64\x63\xf5\xdf\x6f\xfa\x63\x95\x25\xdb\xf4\x50\x40\x28\x61\xf8\x89\x3a\xd5\x7a\x37\xe3\xb1\x3a\x9c\x66\x39\x81\x98\xe5\x1c\x25\x0e\x36\xc3\xa2\xb2\x9f\x01\x40\xe7\x70\x31\x73\x40\x1c\x82\x49\xa0\xed\x5d\x58\xd0\x2a\x1f\x80\xc9\x00\xe7\x2e\xe1\xcd\x75\xb7\xf7\xa6\x7b\xa5\xc6\x81\xcb\x12\x8c\xcc\x91\x05\x76\x89\x1b\xc3\xc9\x6e\xb2\x0c\xa2\xc9\xfc\xc1\x73\xa8\x34\xe7\x13\x6b\xec\x29\xcc\x20\xad\x56\xa3\x45\xf5\x26\x64\x90\xe6\x89\x42\xad\x46\x32\x83\xc4\xf9\x79\x0a\x89\x53\xd0\x53\x5a\xca\x09\xba\x0a\xff\x80\x3c\x82\x5e\xf8\xf2\x18\x2c\xb8\x46\x60\xc8\xeb\xee\xef\xaa\xd6\x1d\x0c\x46\xbd\xae\xf6\x1a\x9c\x4b\x3c\x7e\x49\xb8\x2f\xa1\xeb\x2b\xc4\xb6\xc8\x3d\x25\x73\xfd\x8e\x92\x57\x7a\x10\x78\xc7\x0f\x78\x95\xe6\xbf\x91\x39\xd5\x4d\xea\xa1\xae\x0a\xc8\x5c\x24\x65\x1e\xdd\x35\x17\xc2\xe0\xc9\x16\x64\x93\xee\x6e\x57\xa6\xd3\xb1\xf6\x9e\x5d\xb1\x3b\xe4\x39\xd5\xb3\x95\xe8\x3f\x2e\xb3\xd4\xe2\xe0\x3b\xb5\x46\xb5\xa6\x90\x0a\x7e\x2a\x35\x36\xfc\xe7\x14\x5a\x54\x0f\x60\x46\xf3\x9f\xed\xe9\xa5\xda\x9d\xc2\xa4\x35\xd9\xc0\xf6\x94\xda\xcf\xd6\x2d\x0d\x18\x02\x47\x9b\xa0\x61\x2a\xc5\x84\xca\x2b\x75\xca\xc6\x2e\x88\x39\x34\x2e\x20\xc3\x3d\xaf\x72\x00\xf3\x6c\xa4\xf3\xb9\xc1\x83\x4e\xd7\xf8\x82\xc3\x4d\xa9\x4c\x0e\x1c\x9c\xe5\xcd\x65\x7f\xa0\x66\xdb\xc7\xf2\x29\xfd\xe2\x92\x12\xa6\x14\x98\xb3\xfd\xf5\x52\x9f\xc1\x44\x63\x05\x74\xb1\x70\xcb\x84\x3e\x40\xb7\x7d\x96\x70\x20\x69\x98\xd4\x58\xc0\xc4\x61\x66\xb4\x32\x51\xd5\x37\xa3\x5c\xd0\xfa\x79\xa0\x9d\xa8\x07\xc0\x00\x53\x07\xfc\x7b\x12\x84\xc9\x14\xd2\xf8\x34\x4c\xc7\x9d\x8e\x8c\x15\x5e\xa7\xad\x54\x5b\x79\xbc\xec\x33\x78\x43\x60\x2f\xa9\x6b\x99\xfa\xe3\x53\xcd\x80\x43\x4c\xfb\x6f\xd5\xd1\xe5\x45\xf7\x8f\x3c\x58\xe4\xf1\xb2\xab\x03\x90\xb8\xf5\x74\x27\x58\x3d\x89\xc4\xd5\xb8\x3b\x9c\x5e\x47\x48\x28\x72\xa3\x89\xa1\x56\x51\xe4\x7a\x3d\x27\x18\x0b\x63\xee\xde\x3b\x4f\xb5\x31\xe8\xbd\x1e\xbd\x1b\xe6\x01\x60\x91\x07\x81\xc1\x21\x71\xc6\x95\x2d\xec\x99\xa7\x7b\x8f\xa4\x24\x2e\x90\x50\xce\x50\xda\xff\x67\x4e\x54\x5f\x81\x32\xa8\xc7\x9e\xcd\x30\xa0\xf1\x4a\x1d\xb2\xfc\xc2\xa1\x6d\x75\x42\x68\x9b\x39\xfd\x0c\x5a\x72\xd6\x0f\xc7\x96\x99\xa3\xad\xe1\xcd\x7b\xed\xf2\x22\x5f\x36\xcb\x95\x7a\xe2\x99\xe7\x79\x8d\xf9\x54\x1e\x92\xcd\x5e\xb1\xb2\x96\x3e\x3f\x74\x98\xfb\x06\x6a\x0c\xe6\xf6\x09\x5b\xae\xc9\xad\xfd\x0e\x8c\xfa\xfd\x47\x3f\x80\x0a\x71\xae\xfb\xec\x31\x78\x5c\x51\x72\xb4\x70\x9d\x5b\xc2\x2e\x50\x42\x1e\x65\x35\x36\xbc\xe2\x97\xfe\x70\x9a\x0b\xea\x3c\xd9\x6d\x70\x48\x76\x5b\xf8\xcf\xe4\xb6\xc1\x64\x9b\xd9\x94\x76\x8b\xa3\xd1\x6e\xc8\x39\xc3\x19\x3a\xcc\x91\x7f\xaa\x0d\xe8\x30\xc7\x3d\x0f\x06\x79\x20\x38\x00\x81\x57\xfe\x6d\x10\x3c\x3e\xeb\x17\x93\xab\xe9\xf4\x8f\x8d\x5b\xd4\xe4\x93\x06\x16\x52\x35\xb9\xd1\x08\x2b\xa9\x67\x9b\x79\xf4\x8f\xef\x75\x3b\x78\xbe\xa5\x3f\x26\xda\xbb\x2e\x14\xcb\xcf\x55\x60\xa8\xf1\x7b\x0a\xb0\x2c\xb9\xfd\x5d\xc9\x2c\xbf\x40\xa7\x1f\x78\x6b\x03\xd6\x45\x31\x9f\x5f\x6a\xb7\xcb\xc0\x85\x72\x76\x49\x97\x33\xea\x31\x7d\x19\xe5\x2d\x6e\x11\xcc\xb6\xf7\x61\x69\x6b\x58\xa6\x79\x52\x53\xa0\xb4\x35\xac\x16\xed\x28\x58\xda\x9e\x34\x9b\x89\xd2\x16\xb9\xe3\x85\x2d\x3e\xb3\xb2\x16\x82\xb3\x0d\x65\x6d\x18\xa3\x64\x3c\x81\xfe\x42\xc2\x1c\xfd\xf3\xdf\x26\x02\x99\x76\xc7\xb8\xad\x70\x11\x4d\x4e\xb0\xe6\x82\x10\xc9\xa0\x4f\xc7\x37\xaa\x20\x22\x19\x64\x79\xf1\xc9\x59\x93\x34\xc6\xb6\x95\x0e\x01\xda\xd1\x1a\xd1\x39\xfb\xd5\xf0\x06\x15\x4c\xd5\xc9\x14\xac\x3b\x1e\x6a\x3d\xb6\x8f\xc0\x57\xc4\x8d\x4e\xa7\x51\x6d\x40\x69\x8a\x77\x35\x3e\x06\x0a\xb1\x8e\xf5\x79\x76\x3b\x67\x02\x98\x0c\xfd\x03\x38\xb0\xcc\xd2\x81\xfb\x57\xb4\x82\x83\xa4\x9d\xee\x9e\xed\x50\xb9\x96\xa3\x17\x47\x82\xc8\x5a\xca\x94\x62\xaf\x33\x05\x05\x11\x9a\x17\xf1\x25\xe6\x3f\xea\x07\xa4\x50\xd4\x0d\xcd\xb8\xd3\xb8\x43\x69\xe0\x64\x1a\x73\x32\x6d\x5e\x20\x67\xe4\x91\xfa\xdb\xee\x11\xbe\x08\x37\x34\x0c\x60\xc2\x36\xe6\x78\x48\xc3\x8b\xed\xed\x66\xf2\xc6\x4d\x2a\xb2\xfb\xe7\x6f\x85\xb6\xb7\x9b\x04\xb9\x47\x68\x33\xb1\x90\x6d\xc5\x4c\xb6\xd3\x8d\x20\x9a\x2e\x39\x45\x49\xdd\xd7\xa0\x83\x77\xba\x77\xf6\xb9\x08\xf7\x14\xaa\x12\x52\xe0\x23\xc4\x5e\x6b\xc5\xb0\xfb\x05\xf2\x27\x41\x06\x18\xa8\x3f\xff\x2c\x88\x48\x76\x34\xe0\xc3\xed\x21\x3e\xc0\x42\x11\xe6\x53\x75\x38\x2a\x70\x8c\xb8\x54\xa1\xb8\x69\xa1\x20\x88\x00\x22\xbd\xd3\x17\x1c\xc9\x8f\x85\x87\x8f\xc5\xf8\xfb\x8f\x88\xe0\x43\x01\x30\x2c\x70\x10\x79\x17\x0d\x3d\x20\xbf\xfd\x86\x91\x00\x01\x0b\x4b\x14\xf2\xea\x95\xd6\xed\x41\x79\x08\xb9\x30\xcc\x19\xb1\xbe\xb3\x80\xce\xe8\xb5\xb1\x5a\x7d\x26\x8a\x20\x46\xa2\xb0\x9a\x77\x1d\x28\xd1\xef\xb1\x9d\x28\xc3\x42\x89\x0e\x41\x8b\x05\x3c\x75\x02\xb4\xfb\x56\x6f\xd4\x54\x3a\x61\x10\xa5\x90\xe8\x1d\xf7\x16\xfe\xb7\xf5\x99\x7b\x3b\x98\x73\x3f\xf1\x0b\xe4\x1f\x67\xc4\x71\x23\x37\xd9\xdb\x06\xd3\x3f\x81\x64\xf4\xf2\x78\x7f\x0b\xdc\x3b\xf1\x6a\xba\x0e\xe5\x6f\x22\x8f\x7d\x41\xfa\x56\x2a\x0b\xc2\xe2\x03\xb7\x5f\x2c\xdc\xb1\xaa\x72\x88\xf9\xfe\x1e\x3a\x6a\x72\xc5\x2a\x90\x7c\x3e\xff\x8f\xb8\xd3\x93\x98\xd3\x87\x19\x17\xdc\x3e\xae\x57\x20\xcc\xf3\xf8\x06\x99\xdc\x94\xab\x4a\x1d\x37\xc9\x64\xa5\x5e\xad\xc9\x87\xe5\x03\xf2\x95\x6c\xa1\xc3\xbb\x25\x3d\x2d\x7e\x85\x4f\xa8\xff\xa8\xe3\x8a\xa1\x3b\x7e\x3b\xe5\x63\xb4\xa1\x3c\xc1\xae\x6d\x43\x0f\xba\xc6\x0b\x5b\xc0\xf7\x97\xe6\xd6\x10\x9a\x43\x0a\xcf\x89\x48\x92\x44\x50\xac\xf5\x2b\xf9\xc6\xfc\x1a\x5a\x66\x18\x41\x99\xab\x31\x6c\x36\x42\x95\xd3\x6f\xf1\xc4\x05\xa3\xaf\x30\x23\x55\xf0\x33\x87\x8b\x54\x22\x50\xed\x5c\x39\xa4\x72\x58\xf6\xa8\x1c\x94\x37\x18\xb7\xe9\x46\x52\x3c\x76\x27\x54\xf7\x8c\xf9\x6e\x02\xf1\x19\x5d\x2b\xda\xa9\xe4\x51\xf9\x3e\xc3\x45\xab\x11\x88\x84\x40\xb7\x1d\x24\xa3\x6a\x34\x5d\x65\xaf\xe9\x32\x85\x12\xc6\xab\x44\x49\xe9\x63\xf1\x6b\x31\x3e\xa0\x5d\xbb\xe1\x1e\x7e\xac\xa1\x92\xa1\x43\x5b\x66\x99\xeb\x12\x48\x34\xc1\xe8\x51\x5a\x44\x5f\xf0\xa1\x1e\xc1\x59\x65\x72\x56\xc4\xab\x20\xb2\xfb\x02\xf7\x22\xd0\x87\x8f\x05\xc4\x33\x4c\x59\x11\x6a\x69\x39\x96\x06\x63\x49\x50\xdc\xa4\x41\xc2\x72\x03\x7a\x91\x84\x71\x4a\x1f\x02\x56\xc2\x50\xc7\x8c\xf1\x4b\x7c\x03\x2c\x0a\xbc\x56\xab\xda\x62\xbb\xd3\x72\xbd\x55\x6d\xb2\x89\xf8\x20\xfd\x2f\x6c\xe4\x23\x1a\xa4\xd5\xc5\xda\xc7\xff\x30\xfc\x87\x80\x7a\x00\x4b\xaf\x00\xef\xa1\x75\xdb\x12\x44\x63\xae\xc7\xc3\xa7\x54\xfe\x55\xa8\x30\x5a\xd1\x66\x0f\xb8\x60\x10\xc8\x12\x2c\x03\x8f\x02\xf9\x2a\x88\x1e\x0d\xd6\xa0\x25\x25\x13\x52\x23\x29\x42\xd8\x25\xa4\xca\xf0\xf0\x0d\x37\x26\x79\x66\x07\x7b\x46\xb3\x53\xe0\x3d\xa2\x53\x7d\xd9\xce\x4d\xf1\x89\x65\x5f\xc0\x9e\x41\x42\xdb\x96\x0b\x7b\xb9\x1c\x08\x83\x30\xd7\xc1\x5b\x8c\xcd\xa3\x23\x96\xeb\x7e\x0d\x23\x24\x8a\x6d\xf1\xbf\x78\x06\x05\xae\x42\x3c\xa6\x81\x04\x33\xcd\x59\xc1\x81\xd4\x1d\xed\xce\x9b\xcc\x17\x58\xdb\x71\x1e\x71\x11\x2a\xe0\xd4\xc8\x87\x42\x22\xba\xe5\x1e\xef\x29\x44\xc9\x86\x75\x27\x07\x2e\xd8\x3a\x46\x43\x21\x11\x0b\x67\x1f\x8b\xbc\x27\x05\x9e\x80\xbd\x25\x11\x2d\x70\x17\x98\x2d\x37\xce\x41\x3d\x8f\x24\x3c\xc5\x9d\xfd\x07\xf8\x44\x54\xa1\x44\xaf\xb8\x0f\x51\x7c\xb3\xe3\x57\x3c\x38\x8a\xd9\x01\xc4\xe7\xb9\xdc\xb9\x03\x77\xe1\x16\xc1\x29\x29\xee\x33\x60\x2a\xeb\x6f\x66\xb9\x6c\xce\x4d\xa2\xe7\xe9\xfa\xe1\x09\x66\x28\x62\x36\x53\x62\xee\x12\x26\xbe\x9d\x12\xaf\x53\x50\x3c\x91\x32\xc2\x8c\x21\x72\x4f\xd8\x45\x35\x34\x75\xce\x94\x06\xcc\x33\x8f\xea\x5f\x98\x59\x2b\xac\x88\x38\x24\x21\x86\x95\x48\xba\x50\xc8\x46\x25\x51\x1c\x1f\x54\xbb\x93\xef\xaa\xdd\xf7\xb8\xb2\xe3\x42\x50\xe0\x68\xc1\x89\x77\x3c\xb0\xb2\xf1\xc0\xcc\x70\xe2\x30\x31\xad\x61\x64\x7e\x2c\x26\xb4\x87\xdf\xe2\x1e\x52\x9d\xc4\x1d\x15\x23\x2c\x39\xa3\x71\x4c\x43\x3a\x9f\xb0\x9e\x6c\x3e\x61\x0a\x26\x16\xab\x25\xb8\xc1\x53\xef\xcf\x48\x2a\x03\x91\x3f\xff\x0c\x5d\x2e\xe4\x89\x7c\x2e\x34\xf7\x9e\xb2\x90\x19\x7c\xff\x5a\xe8\xc7\xac\x86\xbe\x73\x3d\xf4\xf7\x8a\xe8\x87\xac\x88\x2a\xbc\xf8\xde\xb3\x62\x89\x7f\x8d\xb5\xb3\x2c\x0a\x2b\x46\x36\x58\xb6\xfe\xe0\x53\x4a\xbc\x4c\x8c\x78\x42\xe7\x62\x5c\xa1\x7b\x16\xf0\x88\x02\x4f\x54\x61\x09\x0a\x89\x8a\xc4\x4d\x9d\xb7\x90\xde\xf2\x85\xfa\xe3\x1c\x44\x20\x07\xaf\xc6\x12\xbd\xd8\x59\x8f\x45\xd4\xf0\xca\xeb\xaf\xb6\xd2\x3e\xa9\x2a\x6d\xa8\xbf\xda\x4a\xa3\x15\x1e\x8f\x49\x54\x0b\x5f\x33\xb7\x57\xbe\x31\x18\x9e\xe2\x62\x99\xef\x1b\x73\x16\x81\xd7\xe7\xe0\x93\x30\x31\x43\xe4\x15\xff\x15\x4a\x63\x17\xca\x32\x34\x2b\x66\xf7\x42\x5a\x1a\xbc\xed\x5e\x87\x15\x22\xbd\x83\x75\x1b\x1f\x3c\x7e\xed\x7d\xe3\xaf\xd9\xa9\x89\x00\xbf\xfc\x5e\x52\xdd\xe1\xdb\x60\xec\x5c\x00\x13\x60\x5e\x63\x3b\x77\xee\x17\xca\x4a\xce\xa8\x89\xc5\xa3\x54\x88\xc5\x40\x93\x25\x4f\x71\x77\x9c\x89\x84\x9e\x39\xc6\x64\x66\xff\x56\xd8\xe6\x95\xe7\x47\x18\xc9\x66\x8f\x4e\xfc\x71\xa3\x43\xb3\xff\x70\x2b\xf2\x45\xf5\xdf\x76\xfc\x7f\x62\xc7\xf8\x16\xea\x7e\x3b\x26\x36\x60\xbf\xc3\x8e\xa1\xfc\xff\xba\x1d\x13\x9b\xd6\xa6\x6b\xa4\x0e\x3c\xa6\x28\xd1\x06\xb6\xde\x68\x58\x8a\x2e\x49\x8d\x9a\x2e\xb7\xd2\xa7\xbb\xd2\x32\x7c\x1b\x3b\x4d\xfd\x0b\x1f\x7e\x4c\x60\x7a\xeb\xac\x53\x98\xa6\x28\xd1\x89\xb9\x3a\xa5\x66\xb3\x2d\x49\x66\x47\x6e\xeb\x72\x0a\xd3\xb4\x0c\xc7\x34\x4d\xfd\x59\x30\x85\xb5\x45\x0a\xd3\x14\x25\xc4\xb4\xa1\xe8\x1d\xdd\x00\x3f\x55\x6a\xcd\xc6\xac\x6d\x25\x31\x4d\xcb\x70\x4c\xd3\xd4\x9f\x05\x53\x6f\x19\xa4\x30\x4d\x51\xa2\xd8\xaf\x5b\xb5\xa6\xdc\x91\x24\xd9\xaa\x9b\x90\x08\x92\x98\xa6\x65\x38\xa6\x69\xea\xcf\x82\xa9\x6f\x78\xf6\x2a\xf0\x53\xb8\x66\x50\x43\x6c\x9b\x27\x86\x6c\xca\x78\x98\xdc\xaa\x37\x1a\x30\x86\x04\xb6\x59\x72\x1c\xdf\xac\x37\x3f\x0d\xc6\x5e\x7a\xce\x4a\x51\xa2\xf3\x84\x56\x47\x6f\x76\x6a\x92\x64\x19\x2d\xcb\x68\x9f\xa4\xb0\xf5\xb2\xe6\xac\x34\xf5\x2f\x8c\x29\x3f\xcd\x85\x5f\xf4\xc3\x95\x6d\x06\x5f\x8f\x26\x53\xed\x66\xd8\x1f\x4e\xa6\xdd\xc1\x00\xd6\x60\xa7\x02\x61\x27\xe9\x61\xe1\x68\xaf\x16\x34\x00\xd2\x39\x23\x40\xcb\x73\xd7\x0f\xe2\x74\x7c\x06\xf2\xcc\x76\xb4\xeb\xf1\x08\x8a\x99\xb7\x13\x20\x07\xba\x57\x2c\xa9\xef\x55\xf5\xfd\xb4\x2c\x88\xe7\x3b\x05\xe3\x39\x3f\x00\xbd\xa2\x8e\xa9\x29\xc0\xcf\xb7\xbb\x04\xe2\xaf\x67\xa6\xed\x01\x01\x0c\x22\x10\x3c\x41\x0f\x45\xd2\xdb\xb7\xa3\x21\x90\x8a\x25\x7e\x58\xbe\x9c\xf0\x82\x0c\xaa\xbe\x64\x27\xdd\x8b\xa5\xc0\x5d\x69\xd1\x5b\xd6\x7f\x51\x5f\x3f\x1c\x9b\x74\x65\xb8\xcb\x15\x48\x3a\x2e\x9e\xb2\xd7\x5e\xab\xdd\x0b\x75\x3c\x29\xf3\x53\x10\x4d\x7e\x08\xa2\x59\xe7\x27\x8f\xb1\xa3\x17\xea\xb5\x3a\xbc\x50\x87\xbd\xbe\x3a\xd1\x6a\xd0\x15\x49\x62\xb3\x07\xfc\x87\x81\x4a\x3a\x3e\xe3\x0c\x8d\xa7\x9e\x9c\x35\x3c\xf3\xe6\x77\x44\x95\x32\xc9\xa4\x0a\x88\x57\x82\xc8\x86\x9b\x53\xbe\x56\x3e\xb4\x3d\xf6\x0b\x89\x43\xfa\x57\xc9\xe6\x16\xf0\x0c\xf4\xef\xda\xf5\xa6\xb7\x77\xda\xb5\x76\x8e\xb4\x73\x78\x17\x11\x76\xde\x5e\xa8\x97\xdd\x9b\xc1\x34\xc9\x25\x03\x1b\xdb\x6f\xe4\xb1\x57\xab\x35\xf1\xf4\x03\x7c\xf2\xb3\x28\x0c\xa1\xc9\xe8\x66\xdc\x63\xe0\x7c\x64\x4d\xf7\xae\xaf\xd9\x81\x03\x74\xa0\x7e\xd2\xdc\x60\x07\xa0\x81\x5d\xf8\x95\x3f\x26\x59\x70\x2f\x9d\xbd\xc4\x9d\x76\xa6\x2e\x52\x56\x2c\xc5\x4e\x33\x20\x26\xef\xd4\xf1\x78\x34\x8e\x08\x02\x19\x5c\x74\x2f\x2e\x72\xf8\x41\xb1\x04\x5e\xdf\x1f\x4e\x07\xe5\xf0\x16\x2a\xfe\xdf\x21\x20\x70\x30\x91\x0e\xf6\x82\xb5\xc2\x28\x21\xa7\xd6\xc3\x33\xa8\xd1\xe9\xc8\x88\xa8\x76\x7b\x30\xfe\x49\x64\x40\x24\x4d\x54\x76\xb0\x2d\xb2\x5c\x14\x53\x60\xb3\xff\x71\x23\xc9\x06\xc0\x54\x8b\xc5\x29\x5e\x44\x7d\x89\x19\x48\x9a\xdc\x5c\x5e\xf6\xdf\xab\x93\xd3\x64\x9e\xc6\x45\x52\x7a\x26\xdc\xa1\x45\xb9\xba\x2d\x9f\xb0\x1a\xa3\x29\x9b\x27\xad\x76\x27\x99\xab\x77\xa5\x78\xb6\xde\xa5\xff\x85\xf3\xf5\x4e\x3d\xcc\x76\xbb\x44\x3d\x90\x8c\xb0\x88\xdd\x12\xa2\x6a\xb8\x51\x37\x0c\x9d\x42\xe5\x26\x77\x66\x26\x6d\xee\x56\xc3\x31\x91\x6d\x31\x1c\x23\xf2\x83\x71\x30\x3d\x54\xe0\xaa\x28\x08\x29\x7e\x0f\xe8\x18\x8b\xb5\x49\xc9\xab\xe8\x08\xfe\x6f\x02\x3b\x99\x35\xa5\xcb\x95\xeb\xe9\x9e\x0d\x4b\x51\xd3\x75\x8e\x02\x3e\x7d\x48\x84\xbc\xa3\x6c\x4b\x71\xed\xe8\xb3\x05\x3b\xba\xc5\x7f\xa1\xe5\x3a\xa4\xb4\xf2\xdc\x19\x3b\x37\x8d\x87\x14\x70\x15\x5b\x66\x7b\x76\xa6\xee\xdd\x03\xea\xe6\x9a\xb1\x2f\x74\xe3\x0b\x71\x2d\xb2\x78\xc9\xf7\x70\xf1\xb7\x24\x33\xa0\xf9\xa4\xc4\xf7\x3f\x86\xa3\xcb\xd1\x60\x30\x7a\x87\xa7\x1d\xf4\x05\x7e\x27\x09\xd8\xdd\xd1\x32\x1e\xbf\xe6\xfa\x00\x3e\xea\x51\x27\xd8\xfe\x94\x83\xad\xae\xd9\x32\xd9\x67\xc7\xb9\x2a\xe1\x17\x9c\xb1\xbd\x3f\xa1\x12\x1b\x6e\x61\x03\xcc\xbc\x10\x27\xbb\x10\x6a\x9c\x18\x1d\xab\xac\xd6\x01\x30\xa5\x5e\x6d\xb2\xd3\x73\xe1\xa9\xb3\xee\x54\xbb\xbc\x19\xe2\x6f\x47\x26\x90\xf5\x76\xc8\x6c\xf6\xc5\xc3\xe6\xda\x75\x77\xcc\xb2\x63\x6f\x30\x79\x82\xab\x3b\xbe\xc2\xee\x55\xc2\x6f\x5d\xf7\x97\x48\x30\x0d\xce\xd2\x94\xd0\x41\xda\xb5\x59\xcd\x6c\xb4\x70\x59\x6f\xea\x3a\xb5\x9e\x28\x91\x40\x26\xa3\x44\x02\x2a\xfb\x91\x4e\x8d\xfd\x48\xa7\x06\xe3\xc6\x9f\x3d\xfd\x1f\xa6\x50\x3e\x65\xfe\xc8\xf4\x26\xb2\x5d\xae\x78\xa5\x12\xcf\xd3\x95\x4d\x8d\x22\x86\xdf\x76\x8b\x82\x22\x75\xa4\xfa\x7f\x07\x00\x00\xff\xff\x9c\x06\x28\x34\x44\x3a\x00\x00")

func gnutarConfigureXattrsPatchBytes() ([]byte, error) {
	return bindataRead(
		_gnutarConfigureXattrsPatch,
		"gnutar-configure-xattrs.patch",
	)
}

func gnutarConfigureXattrsPatch() (*asset, error) {
	bytes, err := gnutarConfigureXattrsPatchBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gnutar-configure-xattrs.patch", size: 14916, mode: os.FileMode(420), modTime: time.Unix(1440133575, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _tar0001FixBuildFailurePatch = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x6d\x73\xdb\x36\x0c\xfe\xce\x5f\x81\xcb\xbe\xb4\xb5\x25\x4b\xb2\xe3\x17\x75\xe9\x92\x2c\x4a\xe7\xbb\xc4\xc9\x59\x4e\xf7\xe6\x9d\x8f\xa6\x48\x99\x9b\x45\xea\x28\x3a\xb3\xbb\xdb\x7f\x1f\x68\xb9\x51\x9c\xb5\xd7\xfa\xac\x23\x00\x82\x78\x00\xe2\x01\x53\x4b\xed\xa6\x8a\x61\x53\x56\xd6\x70\x5a\x90\x95\xb5\x65\xdc\xe9\xe4\xd2\xfa\x15\x7d\xa4\x4a\xd1\x95\x9f\xab\x8d\xaf\x4d\xde\x61\x68\xed\x58\x6a\x7c\xb7\x32\x5d\x14\xb8\xfc\x20\xb3\x33\x3e\xca\x32\x16\x0c\x33\x1a\x8c\x86\x91\xe8\xf6\x4f\x87\x21\xe5\xa7\x74\xc8\x06\x83\x7e\xb7\x77\xda\x15\xa2\x17\x32\xc1\x87\x84\xa4\x32\x57\x3c\xf3\xb4\x10\xde\x72\x17\xc3\xfb\x4d\x65\xe9\xa3\x86\xdf\x28\xa3\x46\xd2\x0a\xbe\xcf\x6b\xcb\xf9\xc7\x83\xc5\x47\x18\x9f\x9a\x77\x84\x5c\x1b\x5d\xc0\xb7\x22\xc1\xad\x56\x90\xf2\x12\xc2\x01\x04\x41\xbc\xff\x43\x14\x04\xe1\x3e\x4c\x8c\x5b\x26\xe7\x3b\xb8\xd7\x1f\xd5\x8e\xfe\x85\xe9\x20\xb2\xa1\xbb\xf3\x43\xa5\xef\xc8\x15\xb5\x3c\x86\x9f\x79\xd6\x86\xa8\xb7\x8f\x14\x05\x61\x0f\xa2\x30\x8e\xa2\x38\xec\x43\x2b\xc0\x1f\x49\x37\xcb\x3f\x39\xb3\x31\x5c\x6e\x72\x21\xb7\xbc\xf2\x09\x79\x03\x99\x66\xfb\x5b\x0a\x63\xb8\x96\x5b\xb0\xbb\x52\x83\x54\x20\xb4\xb2\x50\x95\x9c\xf9\xe8\x53\x99\xda\x87\xc1\xab\x4a\x1b\xbb\x28\x74\xc6\x17\xd4\xe4\x6d\x68\x54\xb1\xa6\xf9\xeb\x18\xee\x8d\xb6\x08\x02\x27\x52\xa1\xf5\x84\xbc\x4a\x2f\x3e\x24\x57\xe3\xe9\x22\xbd\x9b\xce\x16\xe3\xc9\xdd\x55\xf2\x1a\xfe\x96\x76\x05\x57\x4e\xc3\x6f\x81\xbb\xc9\x64\x46\x3c\xcf\x23\x99\xc4\xe2\x3c\x0f\x3b\x06\xb4\xf3\x94\x19\x2c\x1b\x99\x48\x95\xf1\x2d\x8c\xb0\xa0\x7e\x34\xf0\xfd\xe5\x28\xcc\x78\xbf\x0b\x21\xea\xbd\x9e\x0b\xf2\xfc\x24\x69\xb5\x5a\x47\xa7\xcf\xcf\xc1\x1b\x0e\x46\xed\x01\xb4\xea\x05\x0d\xc9\x96\xad\x37\x19\x07\x21\xd7\xbc\x82\x82\x5a\xb6\x92\x2a\x87\x92\x5a\xcb\x8d\xaa\x60\x2d\x2b\xcb\x33\x77\x29\xd7\xe3\x9b\xc4\x27\x30\x17\x97\x73\x6f\xee\x21\x07\x65\x39\xf7\xb0\xe7\xa5\x56\x5c\xd9\x6a\x2e\xa6\x67\x73\x31\x9e\x3c\xdc\x5e\x26\x53\x54\x08\xa4\xce\x05\x9e\xdb\x60\xcd\x69\xe6\xc2\x37\xc7\x40\x38\xb2\x38\x74\x50\xb4\xc0\x14\x90\x0d\x7c\x6b\x0d\x65\x56\x6a\x85\x78\xfe\xec\x9e\x78\x07\x50\x34\xab\x4a\x68\x53\x1c\xc0\x92\x5f\xee\xa7\x49\x9a\x8e\xef\x26\xf3\x6c\xda\xfe\x94\xda\xf6\xf3\x1e\x98\x52\xeb\xeb\x71\xc4\xb7\xc4\x81\x87\x8a\x43\x85\xd7\x62\x78\xb9\xa6\x8c\xc3\x4b\x0f\xb0\x1a\x9e\x40\x9e\x55\xe7\xea\x49\x53\xe4\xda\xc1\xd0\x5c\xb8\x2e\x5d\xbd\x15\x81\xd9\x8a\x63\xf0\x83\x0a\x54\x08\x47\xa8\xa5\x46\xce\xf0\x43\xab\xa8\x72\xfd\xa8\xe5\x4f\x7d\xf2\x8f\xd9\xd3\x70\x76\xd9\xc8\x07\xf6\x44\xd1\x29\xeb\x47\x3d\xdf\x17\xc3\x30\x88\x78\x70\xcc\x9e\xc6\xbb\x66\x4f\xa3\x3b\xf6\x84\xdd\x5e\xd8\xc6\xe1\x6a\xd5\xc2\xd0\x31\x08\x5f\x01\x2b\x19\xb0\x15\x35\xfb\x4a\x5d\x5d\x0b\x4c\xaa\x90\x8a\x5a\x6d\xde\x92\x23\x0f\x86\x55\x59\x78\x53\x2f\x47\xf3\xf4\xfb\x1f\x70\x06\xff\x10\x00\x38\x51\xc8\x8d\x93\x76\x2d\x62\x34\x14\x5b\xdf\x49\xf1\xbf\xa1\x71\xfb\xf5\xa4\x39\x07\xae\xf0\x0a\x9c\x6d\xf2\x70\x73\x43\xe0\x5f\x04\x7e\x82\x96\xca\xbe\x98\xd6\x06\x0d\xe0\x68\x4a\x27\x77\x93\xa4\xfd\x39\xfb\xc5\x6d\xf2\xe5\x3c\x5e\x38\xef\x47\xbd\xc9\xa9\xce\xe5\x62\xfa\xfe\xf6\x62\xf6\xe3\x4f\x8b\x0f\xc9\x74\x7c\xfd\xeb\xd7\x9e\x93\xb7\xd8\x11\xe2\xde\x71\x78\x0c\xfc\x91\x1f\xf8\x11\xf9\x2f\x00\x00\xff\xff\x4e\x24\x17\xfb\x03\x06\x00\x00")

func tar0001FixBuildFailurePatchBytes() ([]byte, error) {
	return bindataRead(
		_tar0001FixBuildFailurePatch,
		"tar-0001-fix-build-failure.patch",
	)
}

func tar0001FixBuildFailurePatch() (*asset, error) {
	bytes, err := tar0001FixBuildFailurePatchBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tar-0001-fix-build-failure.patch", size: 1539, mode: os.FileMode(420), modTime: time.Unix(1440133602, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"gnutar-configure-xattrs.patch": gnutarConfigureXattrsPatch,
	"tar-0001-fix-build-failure.patch": tar0001FixBuildFailurePatch,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"gnutar-configure-xattrs.patch": &bintree{gnutarConfigureXattrsPatch, map[string]*bintree{
	}},
	"tar-0001-fix-build-failure.patch": &bintree{tar0001FixBuildFailurePatch, map[string]*bintree{
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

